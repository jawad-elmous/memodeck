# This workflow will do a clean install of node dependencies, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Node.js CI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:

    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [12.x, 14.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/
    
    services:
      mariadb:
        image: mariadb:latest
        ports:
          - 3306
        env:
          DB_DATABASE: epsi
          DB_USER: root
          DB_PASS: root
          MYSQL_ROOT_PASSWORD: password
        options: --health-cmd="mysqladmin ping" --health-interval=5s --health-timeout=2s --health-retries=3

    steps:
    - uses: actions/checkout@v2
    - name: Verify MariaDB connection
      run: |
        mysql -u root -proot -h 127.0.0.1 -P${{ job.services.mariadb.ports[3306] }} epsi -e "CREATE TABLE IF NOT EXISTS user (iduser INT PRIMARY KEY auto_increment, username VARCHAR(50) UNIQUE NOT NULL, email VARCHAR(100) UNIQUE NOT NULL, password CHAR(60) NOT NULL, role ENUM('Admin', 'SuperUser', 'Professeur', 'Apprenant') DEFAULT 'Apprenant'); CREATE TABLE IF NOT EXISTS deck (iddeck INT PRIMARY KEY auto_increment, deckname VARCHAR(25) UNIQUE NOT NULL, fkuser INT NOT NULL, FOREIGN KEY (fkuser) REFERENCES user(iduser)); CREATE TABLE IF NOT EXISTS card(idcard INT PRIMARY KEY auto_increment, front TEXT NOT NULL, back TEXT NOT NULL, frontmedia TEXT, backmedia TEXT, fkdeck INT NOT NULL, FOREIGN KEY (fkdeck) REFERENCES deck(iddeck)); CREATE TABLE IF NOT EXISTS reviewcard( idreviewcard INT PRIMARY KEY auto_increment, nbreview INT NOT NULL DEFAULT 1, issuspended BOOLEAN NOT NULL DEFAULT 0,difficulty FLOAT(6,2) NOT NULL DEFAULT 1, nbdayreview INT NOT NULL DEFAULT 1, reviewdate DATE NOT NULL, fkcard INT NOT NULL, FOREIGN KEY (fkcard) REFERENCES card(idcard));"
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v2
      with:
        node-version: ${{ matrix.node-version }}
      env:
        DB_HOST: 127.0.0.1
        DB_DATABASE: epsi
        DB_USER: root
        DB_PASS: root
        SECRET_JWT: supersecret
        PORT: 3000
    - run: npm ci
    - run: npm run build --if-present
    - run: npm test
